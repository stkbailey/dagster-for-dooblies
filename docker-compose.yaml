# https://github.com/dagster-io/dagster/tree/0.14.8/examples/deploy_docker
version: "3.9"

services:
  # This service runs dagit, which loads your user code from the user code container.
  # Since our instance uses the QueuedRunCoordinator, any runs submitted from dagit will be put on
  # a queue and later dequeued and launched by dagster-daemon.
  dagster_dagit:
    build:
      dockerfile: ./Dockerfile
    working_dir: /opt/dagster/dagster_home
    entrypoint:
      - dagit
      - -h
      - "0.0.0.0"
      - -p
      - "3000"
      - -w
      - ./workspace.yaml
    container_name: dagster_dagit
    expose:
      - "3000"
    ports:
      - "3000:3000"
    env_file:
    - .dagster/example.env
    volumes:
      - ~/.aws:/root/.aws
      - ./:/opt/dagster/dagster_home/code/
      - ./.dagster/workspace.yaml:/opt/dagster/dagster_home/workspace.yaml
      - ./.dagster/dagster.yaml:/opt/dagster/dagster_home/dagster.yaml
    networks:
      - dagster_network
    depends_on:
      - dagster_postgresql

  # This service runs the dagster-daemon process, which is responsible for taking runs
  # off of the queue and launching them, as well as creating runs from schedules or sensors.
  dagster_daemon:
    build:
      dockerfile: Dockerfile
    working_dir: /opt/dagster/dagster_home
    command:
      - dagster-daemon
      - run
      - -w
      - ./workspace.yaml
    container_name: dagster_daemon
    restart: on-failure
    env_file:
    - .dagster/example.env
    volumes:
      - ~/.aws:/root/.aws
      - ./:/opt/dagster/dagster_home/code/
      - ./.dagster/workspace.yaml:/opt/dagster/dagster_home/workspace.yaml
      - ./.dagster/dagster.yaml:/opt/dagster/dagster_home/dagster.yaml
    networks:
      - dagster_network
    depends_on:
      - dagster_postgresql

  # This service runs the postgres DB used by dagster for run storage, schedule storage,
  # and event log storage.
  dagster_postgresql:
    image: postgres:11
    container_name: dagster_postgresql
    environment:
      POSTGRES_USER: "postgres_user"
      POSTGRES_PASSWORD: "postgres_password"
      POSTGRES_DB: "postgres_db"
    networks:
      - dagster_network

networks:
  dagster_network:
    driver: bridge
    name: dagster_network
